diff --color --color -ruN src.new/LibSocketAsio.cpp src/LibSocketAsio.cpp
--- src/LibSocketAsio.cpp	2022-01-10 01:03:45.477232405 +0900
+++ src/LibSocketAsio.cpp	2022-01-10 01:04:41.145186002 +0900
@@ -25,6 +25,8 @@
 
 #include "config.h"		// Needed for HAVE_BOOST_SOURCES
 
+#include <wx/thread.h>		// wxMutex
+#include <wx/intl.h>		// _()
 
 #ifdef _MSC_VER
 #define _WIN32_WINNT 0x0501	// Boost complains otherwise
@@ -57,8 +59,6 @@
 #endif
 
 #include "LibSocket.h"
-#include <wx/thread.h>		// wxMutex
-#include <wx/intl.h>		// _()
 #include <common/Format.h>	// Needed for CFormat
 #include "Logger.h"
 #include "GuiEvents.h"
diff --color --color -ruN src.new/UPnPBase.cpp src/UPnPBase.cpp
--- src/UPnPBase.cpp	2022-01-10 01:03:45.477232405 +0900
+++ src/UPnPBase.cpp	2022-01-10 01:05:00.745169657 +0900
@@ -27,13 +27,13 @@
 
 #ifdef ENABLE_UPNP
 
+#include "UPnPBase.h"
 // check for broken Debian-hacked libUPnP
 #include <upnp.h>
 #ifdef STRING_H				// defined in UpnpString.h Yes, I would have liked UPNPSTRING_H much better.
 #define BROKEN_DEBIAN_LIBUPNP
 #endif
 
-#include "UPnPBase.h"
 
 #include <algorithm>		// For transform()
 
diff --color --color -ruN src.new/UPnPBase.h src/UPnPBase.h
--- src/UPnPBase.h	2022-01-10 01:03:45.493232392 +0900
+++ src/UPnPBase.h	2022-01-10 01:05:27.329147497 +0900
@@ -29,11 +29,11 @@
 #define AMULE_UPNP_H
 
 
+#include "UPnPCompatibility.h"
 #include <map>
 #include <string>
 #include <sstream>
 
-#include "UPnPCompatibility.h"
 
 #include <common/SmartPtr.h>		// Needed for CSmartPtr
 
diff --color --color -ruN src.new/UPnPCompatibility.h src/UPnPCompatibility.h
--- src/UPnPCompatibility.h	2022-01-10 01:03:45.481232402 +0900
+++ src/UPnPCompatibility.h	2022-01-10 01:05:59.961120309 +0900
@@ -27,6 +27,8 @@
 #ifndef UPNPCOMPATIBILITY_H
 #define UPNPCOMPATIBILITY_H
 
+#include <common/MuleDebug.h>		// for CMuleException::
+#include <common/StringFunctions.h>	// for char2unicode()
 
 #include <upnp.h>
 #include <upnptools.h>
@@ -35,8 +37,6 @@
 #include <sstream>
 
 
-#include <common/MuleDebug.h>		// for CMuleException::
-#include <common/StringFunctions.h>	// for char2unicode()
 
 
 #include "Logger.h"				// for Add(Debug)LogLineM()
